sudo yum update && sudo yum install -y haproxy

#backup original cfg (optional)
cp /etc/haproxy/haproxy.cfg orig.haproxy.cfg

cat <<EOF | sudo tee /etc/haproxy/haproxy.cfg 
#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   https://www.haproxy.org/download/1.8/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

    # utilize system-wide crypto-policies
    ssl-default-bind-ciphers PROFILE=SYSTEM
    ssl-default-server-ciphers PROFILE=SYSTEM

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    tcp
    log                     global
    option                  tcplog
    option                  dontlognull
    option http-server-close
#    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend main
    bind 10.10.10.30:6443
#    acl url_static       path_beg       -i /static /images /javascript /stylesheets
#    acl url_static       path_end       -i .jpg .gif .png .css .js

#    use_backend static          if url_static
    default_backend             kubernetes_api

#---------------------------------------------------------------------
# static backend for serving up images, stylesheets and such
#---------------------------------------------------------------------
#backend static
#    balance     roundrobin
#    server      static 127.0.0.1:4331 check

#---------------------------------------------------------------------
# round robin balancing between the various backends
#---------------------------------------------------------------------
backend kubernetes_api
    mode        tcp
    option      tcp-check
    balance     roundrobin
    server  worker-1 10.10.10.11:6443 check
    server  worker-2 10.10.10.12:6443 check
    server  worker-2 10.10.10.13:6443 check
EOF

sudo systemctl start haproxy
sudo systemctl status haproxy



## AFTER control-plane is started - THEN do this.

curl -v -k https://10.10.10.30:6443/version 
or
curl -v -k https://lb:6443/version 


#output
# {
#   "major": "1",
#   "minor": "13",
#   "gitVersion": "v1.13.0",
#   "gitCommit": "ddf47ac13c1a9483ea035a79cd7c10005ff21a6d",
#   "gitTreeState": "clean",
#   "buildDate": "2018-12-03T20:56:12Z",
#   "goVersion": "go1.11.2",
#   "compiler": "gc",
#   "platform": "linux/amd64"
# }